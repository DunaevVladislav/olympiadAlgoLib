cmake_minimum_required(VERSION 3.15)
project(competitive_algorithms)

set(CMAKE_CXX_STANDARD 17)

add_executable(testing unit_test/test.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)
add_executable(segTreeTest1 functional_test/SegTreeTest1.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)
add_executable(segTreeTest2 functional_test/SegTreeTest2.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)
add_executable(graphTest1 functional_test/GraphTest1.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)
add_executable(graphTest2 functional_test/GraphTest2.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)
add_executable(suffixAutomatonTest1 functional_test/SuffixAutomatonTest1.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)
add_executable(suffixAutomatonTest2 functional_test/SuffixAutomatonTest2.cpp competitiveProgAlgoLib/ISegmentSolver.h competitiveProgAlgoLib/IDataStructure.h competitiveProgAlgoLib/IMutableDataStructure.h competitiveProgAlgoLib/Array.h competitiveProgAlgoLib/SparseTable.h competitiveProgAlgoLib/SegmentTree.h competitiveProgAlgoLib/FenwickTree.h competitiveProgAlgoLib/SqrtDecomposer.h competitiveProgAlgoLib/Treap.h competitiveProgAlgoLib/IEdge.h competitiveProgAlgoLib/Edge.h competitiveProgAlgoLib/WeightedEdge.h competitiveProgAlgoLib/Graph.h competitiveProgAlgoLib/SuffixAutomaton.h)